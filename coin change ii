class Solution {
    public static int findways(int idx,int amount,int coins[],int dp[][])
    {
        if(idx==0)
        {
            if(amount%coins[idx]==0)
            {
                return 1;
            }
            else{
            return 0;
            }
        }

        if(dp[idx][amount]!=-1)
        {
            return dp[idx][amount];
        }
        int nottake=findways(idx-1,amount,coins,dp);

        int take=0;
        if(coins[idx]<=amount)
        {
        take=findways(idx,amount-coins[idx],coins,dp);
        }

        return dp[idx][amount]=nottake+take;
        
    }
    public int change(int amount, int[] coins) {
        int n=coins.length;
        int dp[][]=new int[n+1][amount+1];
        
        for(int i=0;i<dp.length;i++)
        {
            
        for(int j=0;j<dp[0].length;j++)
        {
            dp[i][j]=-1;
        }
        }
        return findways(n-1,amount,coins,dp);
        

        
    }
}
